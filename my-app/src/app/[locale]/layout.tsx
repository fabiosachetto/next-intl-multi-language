import Navbar from "@/components/NavBar";
// import { Locale, routing } from "@/i18n/routing";
import type { Metadata } from "next";
import { NextIntlClientProvider } from "next-intl";
import { getMessages } from "next-intl/server";
import localFont from "next/font/local";
// import { notFound } from "next/navigation";
import "./globals.css";
import { ReactNode } from "react";

const geistSans = localFont({
  src: "./fonts/GeistVF.woff",
  variable: "--font-geist-sans",
  weight: "100 900",
});
const geistMono = localFont({
  src: "./fonts/GeistMonoVF.woff",
  variable: "--font-geist-mono",
  weight: "100 900",
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

interface LayoutProps {
  children: ReactNode;
  // params: {
  //   locale: "pt" | "en" | "es";
  // };
}

// export default async function RootLayout({ children, params }: LayoutProps) {
export default async function RootLayout({ children }: LayoutProps) {
  // export default async function RootLayout({ children, params,}: Readonly<{
  //   children: React.ReactNode;
  //   params: { locale: Locale };
  // }>) {

  // const { locale } = params;
  // if (!routing.locales.includes(locale as Locale)) {
  //   notFound();
  // }
  // Providing all messages to the client
  // side is the easiest way to get started
  const messages = await getMessages();
  return (
    // <html lang={locale}>
    <html lang="pt">
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
        cz-shortcut-listen="true">
        <NextIntlClientProvider messages={messages}>
          <Navbar />
          {children}
        </NextIntlClientProvider>
      </body>
    </html>
  );
}
